/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package br.com.uem.iss.petshop.Patology.view;

import br.com.uem.iss.petshop.Interfaces.ObserverJInternalFrame;
import br.com.uem.iss.petshop.Interfaces.ViewInterface;
import br.com.uem.iss.petshop.Patology.controller.PatologyController;
import br.com.uem.iss.petshop.Patology.model.PatologyModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author EDUARDO
 */
public final class PatologyView extends javax.swing.JInternalFrame implements ViewInterface{

    /**
     * Creates new form PatologyView
     */
    PatologyController patologyController;
    PatologyModel patologyModel;
    
    ArrayList<ObserverJInternalFrame> observerJInternalFrames;
    public PatologyView(PatologyController c, PatologyModel m) {
        initComponents();
        patologyController = c;
        patologyModel = m;
        observerJInternalFrames = new ArrayList<>();
        updateViewFromModel();
        patologyModel.registerErrorObserver(this);
        patologyModel.registerUpdate(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneDescription = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jButtonRecord = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        jTextFieldName.setText("jTextField1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Nome");

        jScrollPane1.setViewportView(jTextPaneDescription);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Decrição");

        jButtonRecord.setText("Gravar");

        jButtonCancel.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRecord))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel2)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRecord)
                    .addComponent(jButtonCancel))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonRecord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextPane jTextPaneDescription;
    // End of variables declaration//GEN-END:variables

    @Override
    public void createActions() {
        createActionRecord();
        createActionCancel();
        
    }

    @Override
    public void configure() {
        createActions();
        setVisible(true);
    }

    @Override
    public void updateModelFromViewValues() {
  //      patologyModel.setDescription(new Byte(jTextPaneDescription.getText()));
        patologyModel.setName(jTextFieldName.getText());
    }

    @Override
    public void updateViewFromModel() {
   //     Byte patologyDescription = patologyModel.getDescription();
  //      jTextPaneDescription.setText(patologyDescription.toString());
        jTextFieldName.setText(patologyModel.getName());
    }

    @Override
    public void register(ObserverJInternalFrame o) {
        observerJInternalFrames.add(o);
    }

    @Override
    public void updateObserversWasFinalized() {
        for (ObserverJInternalFrame observerJInternalFrame : observerJInternalFrames) {
            observerJInternalFrame.wasFinalized(this);
        }
    }

    @Override
    public void updateViews(String msg) {
        if (msg != null){
            JOptionPane.showMessageDialog(this, msg);
            return;
        }
        updateViewFromModel();
    }

    @Override
    public void errorOcurred(String error) {
        if (error != null)
            JOptionPane.showMessageDialog(this, error);
        else
            JOptionPane.showMessageDialog(this, "um erro desconhecido ocorreu");
    }

    private void finalizeView() {
        updateObserversWasFinalized();
        dispose();
    }

    private void createActionRecord() {
        jButtonRecord.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionRecord();
            }
        });
    }
    
    private void actionRecord() {
        patologyController.persist();
        finalizeView();
    }

    private void createActionCancel() {
        jButtonCancel.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                actionCancel();
            }
        });
    }
    
    private void actionCancel() {
        finalizeView();
    }
}
